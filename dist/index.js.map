{"version":3,"file":"index.js","sources":["../src/session-provider/SessionProviderContext.ts","../src/hooks/useSession.ts","../src/session-provider/ReduxWrapper.tsx","../src/store/session.actions.ts","../src/store/session.slices.ts","../src/session-provider/StorageDriver.ts","../src/session-provider/SessionProvider.tsx"],"sourcesContent":["import React from 'react'\n\nexport const SessionContext = React.createContext<any>({})\nexport const SessionContextProvider = SessionContext.Provider\nexport const SessionContextConsumer = SessionContext.Consumer\n","import { useContext } from 'react'\nimport { SessionContext } from '../session-provider/SessionProviderContext'\nimport { SessionContextType } from '../types/session.types'\n\nexport const useSession = () => {\n    const { clear, removeKey, setAll, setKey, store } = useContext(\n        SessionContext\n    ) as SessionContextType\n    return { clear, removeKey, setAll, setKey, store }\n}\n","import React from 'react'\nimport { useDispatch, useSelector, useStore } from 'react-redux'\nimport { Slice } from '@reduxjs/toolkit'\n\nimport { SessionContextProvider } from './SessionProviderContext'\nimport { DriverStorageType } from '../types/session.types'\n\ninterface ReduxWrapperProps {\n    children: React.ReactNode\n    initialValues?: any\n    slice: Slice\n    onDataChange: (data: any) => void\n    driver?: DriverStorageType\n}\n\nconst ReduxWrapper: React.FC<ReduxWrapperProps> = ({ children, slice, onDataChange, driver }) => {\n    const dispatch = useDispatch()\n    const store = useStore()\n    const currentState: any = useSelector((state) => {\n        return state\n    })\n    const { clearAction, removeKeyAction, setAllAction, setKeyAction } = slice.actions\n\n    const setKey = (key: string, value: any) => {\n        dispatch(setKeyAction({ key, value }))\n    }\n\n    const setAll = (keys: { [k: string]: any }) => {\n        dispatch(setAllAction(keys))\n    }\n\n    const removeKey = (key: string) => {\n        dispatch(removeKeyAction({ key }))\n    }\n\n    const clear = (defaultValues?: any) => {\n        dispatch(clearAction({ defaultValues }))\n    }\n\n    store.subscribe(() => {\n        onDataChange(store.getState())\n    })\n\n    return (\n        <SessionContextProvider\n            value={{\n                driver,\n                setKey,\n                setAll,\n                removeKey,\n                clear,\n                store: currentState\n            }}\n        >\n            {children}\n        </SessionContextProvider>\n    )\n}\n\nexport default ReduxWrapper\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit'\ntype State = any\n\nexport const SetKeyAction: CaseReducer<State, PayloadAction<{ key: string; value?: any }>> = (\n    state,\n    action\n) => {\n    const { key, value } = action.payload\n    const stateCopy = { ...state }\n    stateCopy[key] = value\n    return stateCopy\n}\n\nexport const SetAllAction: CaseReducer<State, PayloadAction<{ [k: string]: any }>> = (\n    state,\n    action\n) => {\n    return { ...state, ...(action.payload || {}) }\n}\n\nexport const RemoveKeyAction: CaseReducer<State, PayloadAction<{ key: string }>> = (\n    state,\n    action\n) => {\n    const { key } = action.payload\n    const stateCopy = { ...state }\n    delete stateCopy[key]\n    return stateCopy\n}\n\nexport const ClearAction: CaseReducer<\n    State,\n    PayloadAction<{ defaultValues?: { [k: string]: any } }>\n> = () => {\n    return {}\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { SetKeyAction, ClearAction, RemoveKeyAction, SetAllAction } from './session.actions'\n\ntype SliceOptionsType = {\n    initialValues?: { [k: string]: any }\n}\n\nexport const createSessionSlice = ({ initialValues }: SliceOptionsType) =>\n    createSlice({\n        name: 'session',\n        initialState: initialValues,\n        reducers: {\n            setKeyAction: SetKeyAction,\n            setAllAction: SetAllAction,\n            removeKeyAction: RemoveKeyAction,\n            clearAction: ClearAction\n        }\n    })\n","import Cookies from 'universal-cookie'\nimport { DriverStorageType } from '../types/session.types'\nclass StorageDriver {\n    private driver: DriverStorageType\n\n    private cookies: Cookies\n\n    constructor() {\n        this.cookies = new Cookies()\n    }\n\n    public setDriver = (driver: DriverStorageType) => {\n        this.driver = driver\n    }\n\n    persistData = (data: any) => {\n        if (this.driver === 'cookie') {\n            if (JSON.stringify(data) === '{}') {\n                this.cookies.remove('app-session')\n            } else {\n                this.cookies.set('app-session', JSON.stringify(data), {\n                    secure: true,\n                    httpOnly: true\n                })\n            }\n        } else {\n            localStorage.setItem('app-session', JSON.stringify(data))\n        }\n    }\n    getData = (): any => {\n        let data: string | null = ''\n        if (this.driver === 'cookie') {\n            data = this.cookies.get('app-session')\n            return data\n        } else {\n            data = localStorage.getItem('app-session')\n            return data ? JSON.parse(data) : {}\n        }\n    }\n}\n\nexport default new StorageDriver()\n","import React from 'react'\nimport ReduxWrapper from './ReduxWrapper'\nimport { Provider } from 'react-redux'\nimport { createSessionSlice } from '../store/session.slices'\nimport { configureStore } from '@reduxjs/toolkit'\nimport storageDriver from './StorageDriver'\nimport { DriverStorageType } from '../types/session.types'\n\ninterface SessionProviderProps {\n    children: React.ReactNode\n    initialValues?: { [k: string]: any }\n    driver?: DriverStorageType\n}\n\nconst SessionProvider: React.FC<SessionProviderProps> = ({ children, initialValues, driver }) => {\n    storageDriver.setDriver(driver || 'localStorage')\n    const storedData = storageDriver.getData()\n    const slice = createSessionSlice({ initialValues: { ...initialValues, ...storedData } })\n    const store = configureStore({\n        reducer: slice.reducer\n    })\n    const onDataChange = (newData: any) => {\n        storageDriver.persistData(newData)\n    }\n    return (\n        <Provider store={store}>\n            <ReduxWrapper\n                driver={driver}\n                slice={slice}\n                initialValues={{ ...initialValues }}\n                onDataChange={onDataChange}\n            >\n                {children}\n            </ReduxWrapper>\n        </Provider>\n    )\n}\n\nexport default SessionProvider\n"],"names":["React","useContext","useDispatch","useStore","useSelector","createSlice","Cookies","configureStore","Provider"],"mappings":"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"}